version: '3.8'

services:
  # Express API 应用 (开发模式)
  app:
    build:
      context: .
      target: development
    container_name: express-api-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "9229:9229"  # Node.js 调试端口
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASS=rootpassword
      - DB_NAME=express_api_dev
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CLUSTER_MODE=false
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    networks:
      - app-network
    command: npm run dev

  # MySQL 数据库 (开发环境)
  mysql:
    image: mysql:8.0
    container_name: express-api-mysql-dev
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=express_api_dev
      - MYSQL_USER=devuser
      - MYSQL_PASSWORD=devpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./scripts/init-dev.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=128M
      --max-connections=100
      --general-log=1
      --general-log-file=/var/lib/mysql/general.log

  # Redis 缓存 (开发环境)
  redis:
    image: redis:7-alpine
    container_name: express-api-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru

  # Redis Commander (Redis 管理界面)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - app-network
    profiles:
      - with-tools

  # phpMyAdmin (MySQL 管理界面)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=root
      - PMA_PASSWORD=rootpassword
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - app-network
    profiles:
      - with-tools

  # Mailhog (邮件测试工具)
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - app-network
    profiles:
      - with-tools

# 数据卷
volumes:
  mysql_dev_data:
    driver: local
  redis_dev_data:
    driver: local

# 网络
networks:
  app-network:
    driver: bridge
